generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DEVELOPMENT_DATABASE_URL")
}

model User {
    id        String     @id @default(uuid())
    email     String     @unique
    password  String
    name      String
    tag       String     @unique
    createdAt DateTime   @default(now())
    books     Book[]
    bookmark  Bookmark[]
    likes     Like[]
}

model Book {
    id        String     @id @default(uuid())
    title     String
    authorId  String
    coverId   String
    coverUrl  String
    createdAt DateTime   @default(now())
    author    User       @relation(fields: [authorId], references: [id], onDelete: Cascade)
    bookmark  Bookmark[]
    likes     Like[]
    pages     Page[]
}

model Page {
    id       String     @id @default(uuid())
    bookId   String
    order    Int
    fileId   String
    fileUrl  String
    bookmark Bookmark[]
    book     Book       @relation(fields: [bookId], references: [id], onDelete: Cascade)
}

model Like {
    id        String   @id @default(uuid())
    userId    String
    bookId    String
    createdAt DateTime @default(now())
    book      Book     @relation(fields: [bookId], references: [id], onDelete: Cascade)
    user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Bookmark {
    userId        String
    bookId        String
    currentPageId String
    book          Book   @relation(fields: [bookId], references: [id], onDelete: Cascade)
    currentPage   Page   @relation(fields: [currentPageId], references: [id], onDelete: Cascade)
    user          User   @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([userId, bookId])
}
